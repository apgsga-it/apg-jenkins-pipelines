parameters {
    string(name: 'baseVersion', defaultValue: '1.0', description: 'Version to Package ')
    string(name: 'bomLastRevision', defaultValue: '1.0', description: 'Version to Package ')
    string(name: 'rpmReleaseNr', defaultValue: '1', description: 'Release to Package ')
    string(name: 'installTarget', defaultValue: 'CHEI212', description: 'Target to Package ')
    string(name: 'targetHost', defaultValue: 'jadas-server', description: 'Target Maschine ')
    string(name: 'sshUser', defaultValue: '', description: 'Ssh User Key')
    string(name: 'sshPw', defaultValue: '', description: 'Ssh Pw Key')
    string(name: 'downLoadDir', defaultValue: '/download', description: 'Download Dir on Target Host')
}
baseVersion  = "${params.baseVersion}"
bomLastRevision  = "${params.bomLastRevision}"
rpmReleaseNr  = "${params.rpmReleaseNr}"
installTarget  = "${params.installTarget}"
targetHost  = "${params.targetHost}"
sshUser  = "${params.sshUser}"
sshPw  = "${params.sshPw}"
downLoadDir = "${params.downLoadDir}"

pipeline {
    agent any
    stages {
        stage('Package') {
            steps {
                pkg('testapp-pkg')
            }
        }
    }
}


def pkg(packagename) {
    echo "installTarget : ${installTarget}, serviceVersion : ${baseVersion}, rpmReleaseNr : ${rpmReleaseNr}, downLoadDir : ${downLoadDir}"
    dir ("${packagename}") {
        sh "chmod +x gradlew"
        sh "./gradlew clean configureResolutionStrategy buildRpm deployRpm installRpm --info  --stacktrace -PbaseVersion=${baseVersion} -PbomLastRevision=${bomLastRevision}  -PinstallTarget=${installTarget}  -PrpmReleaseNr=${rpmReleaseNr} -PtargetHost=${targetHost}  -PsshUser=${sshUser} -PsshPw=${sshPw} -PdownloadDir=${downLoadDir}"
    }
}
