plugins {
    id 'java'
    id "nu.studer.credentials" version "2.1"
    id 'net.linguica.maven-settings' version '0.5'
}
project.ext {
    runnerInstallationDir = project.hasProperty('installDir') ? project.property('installDir') : System.getProperty("user.home") + "/jenkinstests/runner"
    mavenSettingsFile = project.hasProperty('mavenSettings') ? project.property('mavenSettings') : '$USER_HOME/.m2/settings.xml'

}
class JenkinsRunnerExec extends JavaExec {
    public static final String APG_TASK_GROUP = "Apg Gradle Jenkinsrunner"
    @Input
    public def pipelineFile

    @Input def appArgs = []

    @Input def jenkinsWorkspaceDirPath = "${project.projectDir.absolutePath}/jenkinsWorkspace"

    JenkinsRunnerExec() {
        group = APG_TASK_GROUP
    }

    @Override
    void exec() {
        args = [
                "${project.ext.runnerInstallationDir}/bin/jenkinsfile-runner-standalone.jar",
                "-w",
                "${project.ext.runnerInstallationDir}/jenkins/war/jenkins.war",
                "-p",
                "${project.ext.runnerInstallationDir}/jenkins/plugins",
                "--runWorkspace", "${jenkinsWorkspaceDirPath}",
                "-f","${project.projectDir}/${pipelineFile}"
        ] + appArgs
        logging.captureStandardOutput LogLevel.INFO
        logging.captureStandardError LogLevel.ERROR
        main = "-jar"
        super.exec()
    }

}

mavenSettings {
    userSettingsFileName  = project.ext.mavenSettingsFile
}

task runTestLibHelloWorld(type: JenkinsRunnerExec) {
    pipelineFile = "src/test/groovy/helloworld.groovy"
    environment = [CASC_JENKINS_CONFIG:"${project.projectDir}/src/test/resources/helloworld.yaml"]
    description = "Runs Pipeline in ${pipelineFile} , which loads the Pipeline libarary from https://github.com/chhex/jenkins-pipeline-testlib.git  "

}


task runTestPkgAndDeploy(type: JenkinsRunnerExec) {
    appArgs = ["-a", "baseVersion=1.0",
                      "-a", "rpmReleaseNr=${rpmReleaseNr}",
                      "-a", "bomLastRevision=SNAPSHOT",
                      "-a", "installTarget=${installTarget}",
                      "-a", "targetHost=${targetHost}",
                      "-a", "sshUser=${sshUser}",
                      "-a", "sshPw=${sshPw}",
                      "-a", "downLoadDir=${downLoadDir}"]
    pipelineFile = "jenkinsPkgAndDeploy"
    description = "Runs Pipeline in the dir ${pipelineFile}"

}

task runTestBuild(type: JenkinsRunnerExec) {
    appArgs = ["-a", "modules=testapp-bom:testapp-parentpom:testapp-module:testapp-service"]
    pipelineFile = "jenkinsBuild"
    description = "Runs Pipeline in the dir ${pipelineFile}"
}



